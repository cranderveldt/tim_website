$mobile: 480px;
$tablet: 768px;
$desktop: 1000px;

$default-font-size: 14;
$default-line-height: 1.3;
$default-weight: 400;
$h0-size: 72, 1;
$h1-size: 50, 1;
$h2-size: 36, 1.3;
$h3-size: 28, 1.2;
$h4-size: 20, 1.2;
$h5-size: 16;
$h6-size: 14;
$h7-size: 12;

$sans: "Helvetica Neue", Helvetica, Arial, sans-serif;

@mixin round($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}
@mixin gradient($top, $bottom, $topPercent: 0%, $bottomPercent: 100%, $fallback: "fallback.png") {
  background-color: $bottom;
  background-position: 0 0;
  background-repeat: repeat-x;
  @if not $fallback == "fallback.png" {
    background-image: url($fallback);
  }
  background: -webkit-gradient(linear, left top, left bottom, color-stop($topPercent, $top), color-stop($bottomPercent, $bottom));
  background: -webkit-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:    -moz-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:      -o-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:     -ms-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:   linear-gradient(to bottom, $top $topPercent, $bottom $bottomPercent);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$top', endColorstr='$bottom',GradientType=0 );
}
@mixin max-width($width) {
  max-width: $width;
  .oldie & {
    width: $width;
  }
}
@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
     -moz-transform: rotate($deg);
      -ms-transform: rotate($deg);
       -o-transform: rotate($deg);
          transform: rotate($deg);
}
@mixin transition($trans, $speed: 0.1s, $type: linear) {
  -webkit-transition: $trans $speed $type;
     -moz-transition: $trans $speed $type;
       -o-transition: $trans $speed $type;
          transition: $trans $speed $type;
}
@mixin box-shadow($args...) {
  -webkit-box-shadow: $args;
  box-shadow: $args;
}
$viewport-width: false !default;
@mixin above-width($width: $mobile) {
  @if $viewport-width {
    @if $viewport-width >= $width {
      @content;
    }
  }
  @else {
    @media screen and (min-width: $width) {
      @content;
    }
  }
}
@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    line-height: 0;
    content: "";
  }
  &:after {
    clear: both;
  }
}
@mixin placeholder($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color: $color;  
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    color: $color;  
  }

  &:-ms-input-placeholder {  
    color: $color;  
  }
}
@mixin position ($position: relative, $coordinates: 0 0 0 0) {

  @if type-of($position) == list {
    $coordinates: $position;
    $position: relative;
  }

  $top: nth($coordinates, 1);
  $right: nth($coordinates, 2);
  $bottom: nth($coordinates, 3);
  $left: nth($coordinates, 4);

  position: $position;

  @if $top == auto {
    top: $top;
  }
  @else if not(unitless($top)) {
    top: $top;
  }

  @if $right == auto {
    right: $right;
  }
  @else if not(unitless($right)) {
    right: $right;
  }

  @if $bottom == auto {
    bottom: $bottom;
  }
  @else if not(unitless($bottom)) {
    bottom: $bottom;
  }

  @if $left == auto {
    left: $left;
  }
  @else if not(unitless($left)) {
    left: $left;
  }
}
@mixin inline-block($alignment: none) {
  display: inline-block;
  @if $alignment and $alignment != none {
      vertical-align: $alignment; 
  }
  *vertical-align: auto;
  zoom: 1;
  *display: inline
}
// Find ratio with (height / width * 100)%
@mixin intrinsic-ratio($selector: '.scalable', $ratio: 56.25%) {
  position: relative;
  padding-bottom: $ratio;
  height: 0px;
  margin-bottom: 10px;
  #{$selector} {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
  }
}
@mixin border-box {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
@mixin no-border-box {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
}
@mixin font-size ($sizeValue: $default-font-size, $line-h: $default-line-height ) {
  font-size: ($sizeValue * 1) + px;
  font-size: ($sizeValue / 10) + rem;
  line-height: $line-h;
}
@mixin font-size-only ($sizeValue: $default-font-size) {
  font-size: ($sizeValue * 1) + px;
  font-size: ($sizeValue / 10) + rem;
}
@mixin font-based-height ($sizeValue: $default-font-size, $line-h: $default-line-height ) {
  $line: $sizeValue * $line-h;
  height: ($line * 1) + px;
}
